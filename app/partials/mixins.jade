mixin initScripts(production, noFallback)

    script.

        (function () {

            "use strict";

            var log = [],

                noFallback = #{noFallback};

            // setup our timer functions
            window._TIMER = {
                'add': function (text) {
                    log.push(text + ':   ' + Math.floor(window.performance.now()));
                },
                'get': function () {
                    return JSON.stringify(log, null, 2);
                }
            };

            // indicate the HTML file load time
            _TIMER.add('html');

            // helper for EIS
            document.cookie = 'DodNoticeConsent=1';

            // init globals
            window.FTSS = {};
            window.utils = {};
            window.caches = {};
            window.PRODUCTION = #{production};

            // add a class for IE 10
            if (Function('/*@cc_on return document.documentMode===10@*/')()) {
                document.documentElement.className += ' ie10';
            }


            if (!noFallback) {

                window.fallback = function (force) {

                    // Let the user do a hard-reload
                    if (force) {
                        window.location = window.location.href.replace('app.html', 'failover.html');
                        return;
                    }

                    // Fallback to SharePoint
                    if (!window.angular || !FTSS.ng) {
                        add('script', '#{linkLib}');
                        add('script', '#{linkApp}');
                        add('link', '#{linkCSS}');
                    }

                    // Dynamically add tags to our page
                    function add(tag, src) {

                        var el = document.createElement(tag);

                        src = '/sites/ftss/failover/' + src;

                        if (tag === 'script') {

                            el.src = src;

                        } else {

                            el.rel = 'stylesheet';
                            el.type = 'text/css';
                            el.href = src;

                        }

                        document.getElementsByTagName('head')[0].appendChild(el);

                    }

                }

                // In case of very slow downloads (not blocked, but throttled), give the user an
                window.slowLoad = setTimeout(function () {

                    var msg = document.getElementById('setupMessage');

                    msg.className = 'slow';
                    msg.innerHTML = '<a onclick="fallback(true)">Page loading slow?  Click here to load from an alternate site.</a>';

                }, 15000);

            }

        }());

mixin bioPhoto(link, style)
    .mask-img(ng-if=link, style=style)
        img(ng-src='{{' + link + '}}')

//- icon mixin to create our SVG icons
mixin icon(tag, label, viewbox)

    //- wrap in a labl to give a little more CSS flexibility
    label(class='lbl-' + tag, attributes)

        //- specify a viewbox to override for odd-formatted icons
        if viewbox
            svg.icon(class=tag + ' icon-' + tag, viewBox=viewbox)
                use(xlink:href='#icon-' + tag)
            =label

        else
            svg.icon(class=tag + ' icon-' + tag, viewBox='0 0 32 32')
                use(xlink:href='#icon-' + tag)
            =label

mixin spinner()
    .spinner
        .bounce1
        .bounce2
        .bounce3

mixin link(page, tag, name, roles)
    li(class=page + ' ' + roles)
        .pointer
            .arrow
            .arrow_border
        span.link(ng-click='ftss.doNavigate("' + page + '")')
            +icon(tag)
            span= name



mixin grouping()
    div(ng-repeat='(header, group) in groups')

        h3(ng-if='header', style='border-bottom: 1px solid; margin-top:20px; margin-bottom:15px')
            | {{header}}
            span.pull-right {{group.length}}
        block


mixin addButton(text, action)

    -action= action || 'edit(true)'

    .add-button.btn.btn-labeled.btn-success(ng-click=action)
        span.btn-label.white
            +icon('plus-circle')
        span.text  &nbsp;
            =text

mixin tableHeader(addNew, columns, instructions)
    if addNew
        +addButton('Add ' + addNew)

    .wrapped(class=addNew ? 'addNew' : 'noAdd')

        +userInstructions(instructions, true)

        +grouping()

            +tableBody(columns)
                block

mixin tableBody(columns)
    .rollupContainer

        table.table.table-striped.table-expanded.table-hover.rollup

            thead
                th.w5#flags
                each width, label in columns
                    th(style='width:' + width + '%')= label
                th.w10#action

            tbody
                tr.middle.am-fade-and-slide-top.traverse(ng-repeat='row in group track by row.Id',
                ng-class='{priority:row.Priority, archived:row.Archived, updated:row.updated}',
                class='{{row.styles}}',
                ng-dblclick='edit(false)',
                id='row-{{row.Id}}')
                    block

mixin googleMap(small, thumb)
    if small
        a.no-toggle(href='https://www.google.com/maps/@{{row.Location | nospace}},12z', target='_blank', right, ng-show='row.Location',
        hover="<img style='width:600px;height:500px' src='https://maps.google.com/maps/api/staticmap?center={{row.Location | nospace}}&zoom=12&size=600x500&sensor=false'/>")

            if thumb
                img.img-thumbnail(src=thumb)
            else
                img.img-thumbnail(ng-src='https://maps.google.com/maps/api/staticmap?center={{row.Location | nospace}}&zoom=10&size=100x50&sensor=false')

    else
        a(href='https://www.google.com/maps/@{{data.Location | nospace}},12z', target='_blank', ng-show='data.Location')
            img#googleModalMap(ng-src='https://maps.google.com/maps/api/staticmap?center={{data.Location | nospace}}&zoom=12&size=400x300&sensor=false')



mixin actions(view, edit, archive, label)
    div.pull-right
        if view
            span.btn.btn-sm.btn-info.btn-muted.no-archive(ng-click='stats()', hover='View ' + label + ' Stats', left)
                +icon('graph_pie')

        if edit
            span.btn.btn-sm.btn-warning.btn-muted.no-archive(ng-click='edit(false)', hover='Edit ' + label, left)
                +icon('edit')

        if archive
            span.btn.btn-sm.btn-danger.btn-muted.no-archive(
            bs-popover,
            placement='left',
            container='body',
            template='/partials/popover-archive-' + label + '.html')

                +icon('trash_hide')

            span.btn.btn-sm.btn-success.btn-muted.archive(ng-click='archive()', hover='Restore ' + label, left)
                +icon('rotate-left')


mixin userInstructions(text, ignore)
    if ignore
        .alert.alert-warning.alert-dismissable(ng-if='showHelp')
            .close(data-dismiss='alert') &times;
            .pageMessage(user-message=text)
            if ignore
                .hideHelp.btn.btn-link(ng-click='hideHelp()', data-dismiss='alert') Don't show this anymore
            .clearfix
    else
        .alert.alert-warning.alert-dismissable
            .close(data-dismiss='alert') &times;
            .pageMessage(user-message=text)

mixin modalHeader(create, update)
    .modal-header.caps
        if create
            h3(ng-show='createData'): +icon('plus-circle', 'Add&nbsp;' + create)

        if update
            h3(ng-hide='createData'): +icon('edit', 'Update&nbsp;' + update)

        block


mixin modalFooter(submitText, defaultShow)

    .modal-footer

        block

        .btn.btn-success.btn-labeled(ng-click='submit()',
        ng-hide='modal.$invalid || submitted || !modal.$dirty || ' + defaultShow)

            span.btn-label.white: +icon('check-circle')

            if submitText
                span.text &nbsp;
                =submitText
            else
                span.text &nbsp;Submit

        #cancel.btn.btn-default(ng-click='close()') Cancel


mixin formGroup(label,explain, placement)

    .form-group(explain=explain, placement=placement || 'left')
        label.col-lg-2.control-label= label
        .col-lg-10
            block

mixin formGroupTail(model, type, required, helper)

    input.form-control(ng-model=model, type=type, required=required)
    if helper
        .helper= helper


mixin formGroupText(label, model, type, required, helper, explain, placement)

    +formGroup(label, explain, placement)
        +formGroupTail(model, type, required, helper)


mixin formGroupIcon(label, model, type, required, helper, explain, ico, placement)

    +formGroup(label, explain, placement)
        .input-group
            .input-group-addon.w15: +icon(ico)
            +formGroupTail(model, type, required, helper)


mixin confirmPopover(className, title, text, action)

    .popover

        .arrow

        h3.popover-title(class='text-' + className)= title

        .popover-content

            p= text

            block

            p

                .pull-right

                    .btn.btn-sm(class='btn-' + className, ng-click= action) Yes, continue

                    .btn.btn-default.btn-sm(ng-click='$hide()') No, cancel

            .clearfix


mixin registeredStudents(bind)

    .well.well-sm(ng-repeat='request in ::#{bind}', class='alert-{{::request.style}}')

        .bold.border-bottom
            | {{request.Status}} ({{request.count}})
            .pull-right {{request.Host.Unit}}

        dl.dl-horizontal
            dt Student(s)
            dd(ng-repeat='(student, email) in ::request.Students_JSON') {{student}}

            div(ng-if='request.Notes')
                dt Notes
                dd.italics {{::request.Notes}}

            div(ng-if='request.Response')
                dt Response
                dd.wideText {{::request.Response}}

        .clearfix